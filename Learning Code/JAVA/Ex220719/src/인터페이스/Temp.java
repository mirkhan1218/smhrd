package 인터페이스;

public interface Temp {
	
	// 인터페이스의 개념
	// 추상클래스와 비슷한 개념
	// 1. 필드
	// ---> 접근제한자 public 형태의 데이터만 가질 수 있다. -> 생략가능
	// ---> static 형태의 데이터만 가질 수 있다. -> 생략가능
	// ---> final 형태의 데이터만 가질 수 있다. -> 생략가능
	// public static final String name = "배미리칸";
	String NAME = "배미리칸";
	// ---> public static final이라는 키워드가 생략 가능하다.
	// static ---> 변수가 static에 저장되어있으면 글꼴이 기울어진다.
	// final ---> 변수명의 글씨체가 bold, 변수명을 지을때 전부 대문자로 작성
	// ---> 절대 변하면 안되는 데이터들만 interface에 저장한다.
	
	// 2. 메서드
	public abstract void getName();
	
	// 추상클래스 vs 인터페이스
	// 추상클래스
	// 1. 일반 메소드 포함이 가능하다.
	// 2. 다양한 접근제한자를 쓸 수 있다.
	// 3. static, final이 아닌 데이터를 저장할 수 있다.
	//    다양한 객체의 상태와 정보를 수정할 수 있다.
	// 4. 다중상속이 불가능하다.
	// extends
	
	// 인터페이스
	// 1. 추상메서드만 가질 수 있다.
	// 2. 접근제한자는 무조건 public만 사용가능하다.
	// 3. 다양성 (다향성) 다중구현이 가능하다.
	// 4. 다중상속이 가능하다.
	// implements
	
}
